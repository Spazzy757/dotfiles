[includeIf "gitdir:~/repos/"]
   	path = .gitconfig_personal
[includeIf "gitdir:~/repos/container-solutions/inditex/"]
  	path = .gitconfig_client_one
[alias]
	# short aliases

	# Status
	s = status -sb
	# Signed Commit
	c =  commit -S -s -m
    # Checkout branch
	co = checkout
	# Branch
	br = branch
	# Interactive rebase
    r = rebase -i --autosquash
	# simple commit log
	l = log --pretty=oneline -n 20 --graph --abbrev-commit

	# long aliases

    # More Robust History
	hist = log --pretty=format:\"%C(yellow)%h%C(reset) %C(green)%ad%C(reset) %C(red)|%C(reset) %s %C(bold blue)[%an]%C(reset)%C(yellow)%d%C(reset)\" --graph --date=short
    # Pull in remote changes for the current repository and all its submodules.
	p = pull --recurse-submodules
	# Switch to a branch, creating it if necessary.
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
	# List aliases.
	aliases = config --get-regexp alias
	# Amend the currently staged files to the latest commit.
	amend = commit --amend --reuse-message=HEAD
	# `git nuke my-old-branch`
	# (Checks out master and does a forced delete on the branch entered)
	nuke = !git co main && sh -c 'git br -D $1' -

	# Fixup a commit
	fix = commit --fixup
[log]
  decorate = full
[core]
	# global gitignore file
	excludesfile = ~/.gitignore_global
	# Editor
	editor = vim
	# Speed up commands involving untracked files such as `git status`.
	# https://git-scm.com/docs/git-update-index#_untracked_cache
	untrackedCache = true
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions
[commit]
	# Sign commits with GPG
	# https://git-scm.com/book/en/v2/Git-Tools-Signing-Your-Work
	gpgsign = true
[gpg]
	program = gpg
[merge]
	tool = opendiff
[credential]
	helper = store
[color "decorate"]
	head = bold white
	branch = bold magenta
	remotebranch = blue
	tag = bold red
[pull]
	rebase = false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
