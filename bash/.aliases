#!/usr/bin/env bash

# Misc
########################################################################
alias ls='ls -alFG'
alias grep='grep --color=auto'
# Enable aliases to be sudoâ€™ed
alias sudo='sudo '
# Lock the screen (when going AFK)
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
# Copy public key to clipboard:
alias pubkey="cat ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"
# Reload the shell (i.e. invoke as a login shell)
alias reload="exec ${SHELL} -l"
# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'
# Recursively remove .DS_Store files
alias cleands="find . -type f -name '*.DS_Store' -ls -delete"
# recursively delete duplicated files that get created randomly `xxx 2`
alias cleandir="find ./ -type f -name '* [0-9]*'  -ls  -delete"
# Always highlight grep search term
alias grep='grep --color=auto'
# Anonymize and Zip a repo
function anon-repo {
    export FILTER_BRANCH_SQUELCH_WARNING=1
    user=$1
    dir=$(echo $1 | sed 's/\//-/g')
    keyfile=${CS_REVIEWER_KEY:=cs-reviewer}

    ssh-agent bash -c "ssh-add $HOME/.ssh/$keyfile; git clone git@gitlab.com:$user.git $dir"

    # This will loop through all branches on the remote and sync them with local
    command cd $dir
    for branch in `git branch -a | grep remotes | grep -v HEAD | grep -v master`;
    do
        ssh-agent bash -c "ssh-add $HOME/.ssh/$keyfile;git branch --track ${branch#remotes/origin/} $branch"
    done
    command cd ..

    # Copy the repo to a new destination and cd
    command cp -r $dir anon-repo
    command cd anon-repo

    # Rewrite history with anonymized user data
    # We may be doing multiple rewrites, so we must force subsequent ones.
    # We're throwing away the backups anyway.
    command git filter-branch -f \
            --msg-filter \
            'sed "s/Signed-off-by:.*>//g"' \
            --env-filter \
            'export GIT_AUTHOR_NAME="Anonymous Candidate"
             export GIT_AUTHOR_EMAIL="anon@repo.com"
             export GIT_COMMITTER_NAME="Anonymous Candidate"
             export GIT_COMMITTER_EMAIL="anon@repo.com"' \
            --tag-name-filter cat -- --branches --tags
    # Remove remote references
    for r in `git remote`; do git remote rm $r; done

    command cd ..
    command rm -rf anon-repo.zip
    command zip -r anon-repo.zip anon-repo
    command rm -rf anon-repo/
}
export -f anon-repo
#base64
function b64 {
    echo -n "$1" | base64;
}
export -f b64
function b64d {
    echo -n "$1" | base64 -D;
}
export -f b64d
# Setup a kind cluster with an Inlet Loadbalancer
function kind-up {
    kind create cluster --name spazzy-cluster

    kubectl create secret generic inlets-access-key \
            --from-literal inlets-access-key=$DO_TOKEN

    base_url=https://raw.githubusercontent.com/inlets/inlets-operator/0.9.0/artifacts

    kubectl apply -f $base_url/crds/inlets.inlets.dev_tunnels.yaml

    kubectl apply -f $base_url/operator-rbac.yaml

    kubectl apply -f $base_url/operator.yaml

}

# Python
########################################################################
# Shortcut for virtual env's
alias venv='. env/bin/activate'
# Clean pyc
alias cleanpyc='find . -name "*.pyc" -type f  -ls -delete'

# Javascript
########################################################################
alias cleannode="find . -name 'node_modules' -type d -ls -prune -exec rm -rf '{}' +"

# Kubernetes
########################################################################
alias k="kubectl"

# Java
alias java8='export JAVA_HOME=$JAVA_8_HOME'
alias java11='export JAVA_HOME=$JAVA_11_HOME'
# default to Java 11
java11


# Terraform
########################################################################
alias tf="terraform"

# Navigation
########################################################################
# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"
function repos {
      cd "$HOME/repos/$1/"
}
export -f repos
function csrepos {
      cd "$HOME/repos/container-solutions/$1/"
}
export -f csrepos

# GPG
########################################################################
alias gsign="gpg --encrypt --armor"
alias gpub="gpg --export -a brendankamp757@gmail.com |  pbcopy | echo '=> GPG Public key copied to pasteboard.'"

# System
########################################################################
# Find process matching input
function psgrep {
	  if [ ! -z $1 ] ; then
	      echo "Grepping for processes matching $1..."
	      ps aux | grep $1 --color=auto | grep -v grep --color=auto
    else
	      echo "!! Need name to grep for"
	  fi
}
export -f psgrep
